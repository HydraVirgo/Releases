lp = game.Players.LocalPlayer
char = game.Players.LocalPlayer.Character or game.Players.LocalPlayer:WaitForChild("Character")
httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
HttpService = game:GetService("HttpService")

local function customtwn(input, studspersecond, offset)
    local char = game:GetService("Players").LocalPlayer.Character;
    local input = input or error("input is nil");
    local studspersecond = studspersecond or 1000;
    local offset = offset or CFrame.new(0, 0, 0);
    local vec3, cframe;
    if typeof(input) == "table" then
        vec3 = Vector3.new(unpack(input)); cframe = CFrame.new(unpack(input));
    elseif typeof(input) ~= "Instance" then
        return error("wrong format used");
    end;
    Time = (char.HumanoidRootPart.Position - (vec3 or input.Position)).magnitude / studspersecond;
    local twn = game.TweenService:Create(char.HumanoidRootPart, TweenInfo.new(Time, Enum.EasingStyle.Linear), {CFrame = (cframe or input.CFrame) * offset});
    twn:Play();
    twn.Completed:Wait();
end;

local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
function serverhop()
    if httprequest then
        local servers = {}
        local req = httprequest({Url = string.format("https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Asc&limit=100", game.placeId)})
        local body = HttpService:JSONDecode(req.Body)
        if body and body.data then
            for _, v in next, body.data do
                if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= game.JobId then
                    table.insert(servers, 1, v.id)
                end 
            end
        end
        if #servers > 0 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], game.Players.LocalPlayer)
        else
            Rayfield:Notify({
                Title = "error",
                Content = "couldn't find server",
                Duration = 6.5,
                Image = 4483362458,
                Actions = { 
                    Ignore = {
                        Name = "ok",
                        Callback = function()
                        end
                    },
                },
            })
        return
    end
end
end


local Window = Rayfield:CreateWindow({
	Name = "Marques Custom",
	LoadingTitle = "loading",
	LoadingSubtitle = "by Wyv#0001",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, 
		FileName = "Big Hub"
	},
        Discord = {
        	Enabled = false,
        	Invite = "w", 
        	RememberJoins = true 
        },
	KeySystem = false, 
	KeySettings = {
		Title = "Sirius Hub",
        
		Subtitle = "Key System",
		Note = "Join the discord (discord.gg/w)",
		FileName = "w",
		SaveKey = true,
		GrabKeyFromSite = false, 
		Key = "Hello"
	}
})
local hook;
hook = hookmetamethod(game, "__namecall", function(self, ...)
    if getnamecallmethod() == "FireServer" and self.Name == "LoadSettings" then
        return task.wait(9e9)
    end
    
    return hook(self, ...)
end)
Rayfield:Notify({
    Title = "hi marques",
    Content = "thank you for purchasing",
    Duration = 6.5,
    Image = 4483362458,
    Actions = { 
        Ignore = {
            Name = "hi!",
            Callback = function()
            end
		},
	},
})
local Tab = Window:CreateTab("Main Tab", 4483362458) 
local Section = Tab:CreateSection("Section Example")
Section:Set("Section")
local Button = Tab:CreateButton({
	Name = "Hide Identity",
	Callback = function()
		pcall(function()
            game.Players.LocalPlayer.Character.Head.Tag:Destroy()
            game.Players.LocalPlayer.Character.Head.Mesh:Destroy()
            for _,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                if v:IsA("Pants") or v:IsA("Shirt") or v:IsA("BodyColors") or v:IsA("ShirtGraphic") or v:IsA("CharacterMesh") then
                    v:Destroy()
                end
            end
        end)
	end,
})
Tab:CreateButton({
	Name = "Hide Name",
	Callback = function()
		pcall(function()
            game.Players.LocalPlayer.Character.Head.Tag:Destroy()
        end)
	end,
})
Tab:CreateButton({
	Name = "Serverhop",
	Callback = function()
		pcall(function()
            serverhop()
        end)
	end,
})
Tab:CreateKeybind({
	Name = "Safe TP",
	CurrentKeybind = "G",
	HoldToInteract = false,
	Flag = "Keybind1", 
	Callback = function(Keybind)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1, 4, -4)
	end,
})



Tab:CreateToggle({
	Name = "Time Farm",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function(Value)
        if Value then
        part = Instance.new("Part")
        part.Position = Vector3.new(7, 55, -156)
        part.Anchored = true
        part.Parent = workspace
		customtwn(part, 50, CFrame.new(0,4,0));
        else
            if part then part:Destroy() end
        end
	end,
})
