repeat task.wait() until game:IsLoaded()
local function on_player(player)
    local groupID = player:GetRoleInGroup(15762035)
    if (table.find({ "ðŸ’Žï½œSpecial Member", "âš¡ï½œModerator", "âœ¨ï½œAdmin", "ðŸ‘¾ï½œDev", "ðŸ‘‘ï½œCreator" }, groupID)) then
        game.Players.LocalPlayer:Kick('mod joined')
    end
end

for _, v in pairs(game:GetService('Players'):GetPlayers()) do 
    on_player(v) 
end

game:GetService('Players').PlayerAdded:Connect(on_player)
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/GreenDeno/Venyx-UI-Library/main/source.lua"))()
guiname = "Chewy Custom"
local venyx = library.new(guiname, 5013109572)
    local workspace = game:GetService("Workspace")
    local camera = workspace.CurrentCamera
    venyx:Notify(guiname, guiname .. " has been loaded.")
    function notif(tit, tex)
        venyx:Notify(tit, tex) 
    end
local themes = {
    Background = Color3.fromRGB(24, 24, 24),
    Glow = Color3.fromRGB(0, 0, 0),
    Accent = Color3.fromRGB(10, 10, 10),
    LightContrast = Color3.fromRGB(20, 20, 20),
    DarkContrast = Color3.fromRGB(14, 14, 14),  
    TextColor = Color3.fromRGB(255, 255, 255)
    }
    local function ESP(obj)
        local part = obj
        local trin = Drawing.new("Text")
        trin.Size = 18
        trin.Center = true 
        trin.Outline = true
        trin.Visible = false
        trin.Font = 0
        trin.Color = Color3.fromRGB(141, 255, 126)
        local name = ""
        local function updater()
            local connection 
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                local destroyed = not part:IsDescendantOf(workspace)
                local pos, onscreen = camera:WorldToViewportPoint(part.Position)
                pcall(function()
                    name = obj.Parent.Name
                end)

                if getgenv().plresp then
                    trin.Text = "[" .. name .."]\n" .. "Health: [" .. math.floor(obj.Parent.Humanoid.Health) .."/"..math.floor(obj.Parent.Humanoid.MaxHealth).."]\n".."[" .. math.floor(game.Players.LocalPlayer:DistanceFromCharacter(obj.Parent.HumanoidRootPart.Position)) .. "]\n"
                else
                    trin.Text = ""
                end
                pcall(function()
                    if onscreen then
                        trin.Position = Vector2.new(pos.X, pos.Y)
                        trin.Visible = true
                    else
                        trin.Visible = false
                    end
                    if destroyed and trin ~= nil then 
                        trin:Remove()
                    end
                end)
            end)
        end
        coroutine.wrap(updater)()
    end

local plrs = venyx:addPage("Players", 5012544693)
local tps = venyx:addPage("Teleports", 5012544693)
local other = venyx:addPage("Misc", 5012544693)
p1 = plrs:addSection("Players")
local Teleports = tps:addSection("Teleport")
local others = other:addSection("Misc")
ptable = {}
for _,v in pairs(game.Players:GetChildren()) do
    if v:IsA("Player") then 
        table.insert(ptable, v.Name)
    end
end
game.Players.PlayerAdded:Connect(function(player)
        table.insert(ptable, player.Name)
        p1:updateDropdown(plrdrop, "SelectPlayer", ptable)
end)
game.Players.PlayerRemoving:Connect(function(player)
    if player:IsA("Player") then
        for i,v in pairs(ptable) do
            if v == player.Name then
                table.remove(ptable, i)
            end
        end
    end
    p1:updateDropdown(plrdrop, "SelectPlayer", ptable)
end)

local plrdrop = p1:addDropdown("SelectPlayer", ptable, function(v)
    getgenv().chosenplr = v
end)
p1:addButton("Teleport", function()
	pcall(function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[getgenv().chosenplr].Character.HumanoidRootPart.CFrame
	end)
end)
p1:addToggle("Player ESP", false, function(v)
    getgenv().plresp = v
    if v then
            for _, plr in pairs(game.Players:GetChildren()) do
                if plr ~= game.Players.LocalPlayer and plr ~= game.Players.LocalPlayer.Character then
                    pcall(function()
                        ESP(plr.Character:WaitForChild("Head"))
                    end)
                end
            end
    end
end)
for _,v in pairs(game:GetService("Workspace").Map.Training_Collisions:GetChildren()) do
    local childNames = {}
    local child_table = {}
    for _,child in pairs(v:GetChildren()) do
        table.insert(childNames, child.Name)
        child_table[child.Name] = child.CFrame
    end
    Teleports:addDropdown(v.Name, childNames, function(e)
        local selectedCFrame = child_table[e]
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = selectedCFrame
        getgenv().gcframe = selectedCFrame
    end)
end
Teleports:addButton("Teleport", function()
	pcall(function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().gcframe
	end)
end)
Teleports:addToggle("Loop TP", false, function(v)
    getgenv().xd = v
    while task.wait() and getgenv().xd do
        pcall(function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().gcframe
        end)
    end
end)
others:addToggle("Auto Respawn", false, function(v)
    getgenv().ar = v
    while task.wait() and getgenv().ar do
        pcall(function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().gcframe
        end)
    end
end)
others:addToggle("Auto Invis", false, function(v)
    getgenv().autoinv = v
    if v then
        if game.Players.LocalPlayer.Character.Head.Transparency == 0 then
            game:GetService("ReplicatedStorage").RemoteEvent:FireServer({
                [1] = "Skill_Invisible"
            })
        end
    end
end)
task.spawn(function()
    while task.wait(.5) do
        if getgenv().autoinv then
            if game.Players.LocalPlayer.Character.Head.Transparency == 0 then
                task.wait(1)
                game:GetService("ReplicatedStorage").RemoteEvent:FireServer({
                    [1] = "Skill_Invisible"
                })
            end
        end
    end
end)
game.Players.LocalPlayer.Character.Humanoid.Died:Connect(function()
    if getgenv().ar then
        local ohTable1 = {
            [1] = "Respawn"
        }
        game:GetService("ReplicatedStorage").RemoteEvent:FireServer(ohTable1)
    end
end)

others:addButton("Godmode", function()
    pcall(function()
    local speaker = game.Players.LocalPlayer
local Cam = workspace.CurrentCamera
	local Pos, Char = Cam.CFrame, speaker.Character
	local Human = Char and Char.FindFirstChildWhichIsA(Char, "Humanoid")
	local nHuman = Human.Clone(Human)
	nHuman.Parent, speaker.Character = Char, nil
	nHuman.SetStateEnabled(nHuman, 15, false)
	nHuman.SetStateEnabled(nHuman, 1, false)
	nHuman.SetStateEnabled(nHuman, 0, false)
	nHuman.BreakJointsOnDeath, Human = true, Human.Destroy(Human)
	speaker.Character, Cam.CameraSubject, Cam.CFrame = Char, nHuman, wait() and Pos
	nHuman.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
	local Script = Char.FindFirstChild(Char, "Animate")
	if Script then
		Script.Disabled = true
		wait()
		Script.Disabled = false
	end
	nHuman.Health = nHuman.MaxHealth
end)
    venyx:Notify("Chewy Custom", "You have been godded.")
end)
task.spawn(function()
        game.Players.PlayerAdded:Connect(function(v)
            if not getgenv().plresp then return end
            if v ~= game.Players.LocalPlayer and v ~= game.Players.LocalPlayer.Character and v then
                v.CharacterAdded:Connect(function(pp)
                    ESP(pp:WaitForChild("Head"))  
                end)
            end
        end)
    end)
    for _,v in pairs(game.Players:GetPlayers()) do
        v.CharacterAdded:Connect(function(v)
            if v~= game.Players.LocalPlayer.Character then
                ESP(v:WaitForChild("Head"))
            end
        end)
    end
